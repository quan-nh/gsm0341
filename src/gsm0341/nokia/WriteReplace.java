
package gsm0341.nokia;
//
// This file was generated by the BinaryNotes compiler.
// See http://bnotes.sourceforge.net 
// Any modifications to this file will be lost upon recompilation of the source ASN.1. 
//

import org.bn.*;
import org.bn.annotations.*;
import org.bn.annotations.constraints.*;
import org.bn.coders.*;
import org.bn.types.*;




    @ASN1PreparedElement
    @ASN1Sequence ( name = "WriteReplace", isSet = false )
    public class WriteReplace implements IASN1PreparedElement {
            @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 65535L 
		
	   )
	   
        @ASN1Element ( name = "messageIdentifier", isOptional =  false , hasTag =  true, tag = 0 , hasDefaultValue =  false  )
    
	private Integer messageIdentifier = null;
                
  
        @ASN1Element ( name = "oldSerialNumber", isOptional =  true , hasTag =  true, tag = 1 , hasDefaultValue =  false  )
    
	private SerialNumber oldSerialNumber = null;
                
  
        @ASN1Element ( name = "newSerialNumber", isOptional =  false , hasTag =  true, tag = 2 , hasDefaultValue =  false  )
    
	private SerialNumber newSerialNumber = null;
                
  
        @ASN1Element ( name = "cellList", isOptional =  false , hasTag =  true, tag = 3 , hasDefaultValue =  false  )
    
	private CellList cellList = null;
                
  
        @ASN1Element ( name = "channelIndicator", isOptional =  true , hasTag =  true, tag = 4 , hasDefaultValue =  false  )
    
	private Channel channelIndicator = null;
                
  @ASN1Integer( name = "" )
    
            @ASN1SizeConstraint ( max = 1L )
        
        @ASN1Element ( name = "category", isOptional =  true , hasTag =  true, tag = 5 , hasDefaultValue =  false  )
    
	private Long category = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 11L 
		
	   )
	   
        @ASN1Element ( name = "repetitionRate", isOptional =  false , hasTag =  true, tag = 6 , hasDefaultValue =  false  )
    
	private Integer repetitionRate = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 65535L 
		
	   )
	   
        @ASN1Element ( name = "noOfBroadcastReq", isOptional =  false , hasTag =  true, tag = 7 , hasDefaultValue =  false  )
    
	private Integer noOfBroadcastReq = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 1L, 
		
		max = 15L 
		
	   )
	   
        @ASN1Element ( name = "noOfPages", isOptional =  false , hasTag =  true, tag = 8 , hasDefaultValue =  false  )
    
	private Integer noOfPages = null;
                
  @ASN1Integer( name = "" )
    @ASN1ValueRangeConstraint ( 
		
		min = 0L, 
		
		max = 255L 
		
	   )
	   
        @ASN1Element ( name = "dataCodingScheme", isOptional =  false , hasTag =  true, tag = 9 , hasDefaultValue =  false  )
    
	private Integer dataCodingScheme = null;
                
  
@ASN1SequenceOf( name = "cbsPageInf", isSetOf = false ) 

    
        @ASN1Element ( name = "cbsPageInf", isOptional =  false , hasTag =  true, tag = 10 , hasDefaultValue =  false  )
    
	private java.util.Collection<PageInf>  cbsPageInf = null;
                
  
        
        public Integer getMessageIdentifier () {
            return this.messageIdentifier;
        }

        

        public void setMessageIdentifier (Integer value) {
            this.messageIdentifier = value;
        }
        
  
        
        public SerialNumber getOldSerialNumber () {
            return this.oldSerialNumber;
        }

        
        public boolean isOldSerialNumberPresent () {
            return this.oldSerialNumber != null;
        }
        

        public void setOldSerialNumber (SerialNumber value) {
            this.oldSerialNumber = value;
        }
        
  
        
        public SerialNumber getNewSerialNumber () {
            return this.newSerialNumber;
        }

        

        public void setNewSerialNumber (SerialNumber value) {
            this.newSerialNumber = value;
        }
        
  
        
        public CellList getCellList () {
            return this.cellList;
        }

        

        public void setCellList (CellList value) {
            this.cellList = value;
        }
        
  
        
        public Channel getChannelIndicator () {
            return this.channelIndicator;
        }

        
        public boolean isChannelIndicatorPresent () {
            return this.channelIndicator != null;
        }
        

        public void setChannelIndicator (Channel value) {
            this.channelIndicator = value;
        }
        
  
        
        public Long getCategory () {
            return this.category;
        }

        
        public boolean isCategoryPresent () {
            return this.category != null;
        }
        

        public void setCategory (Long value) {
            this.category = value;
        }
        
  
        
        public Integer getRepetitionRate () {
            return this.repetitionRate;
        }

        

        public void setRepetitionRate (Integer value) {
            this.repetitionRate = value;
        }
        
  
        
        public Integer getNoOfBroadcastReq () {
            return this.noOfBroadcastReq;
        }

        

        public void setNoOfBroadcastReq (Integer value) {
            this.noOfBroadcastReq = value;
        }
        
  
        
        public Integer getNoOfPages () {
            return this.noOfPages;
        }

        

        public void setNoOfPages (Integer value) {
            this.noOfPages = value;
        }
        
  
        
        public Integer getDataCodingScheme () {
            return this.dataCodingScheme;
        }

        

        public void setDataCodingScheme (Integer value) {
            this.dataCodingScheme = value;
        }
        
  
        
        public java.util.Collection<PageInf>  getCbsPageInf () {
            return this.cbsPageInf;
        }

        

        public void setCbsPageInf (java.util.Collection<PageInf>  value) {
            this.cbsPageInf = value;
        }
        
  
                    
        
        public void initWithDefaults() {
            
        }

        private static IASN1PreparedElementData preparedData = CoderFactory.getInstance().newPreparedElementData(WriteReplace.class);
        public IASN1PreparedElementData getPreparedData() {
            return preparedData;
        }

            
    }
            